name: Auto-merge PRs

on:
  pull_request_target:
    types: [opened, synchronize]
    paths:
      - 'README.md' # Solo se ejecuta si solo se cambia README.md

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4    #clona tu repo en el runner
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Verificar si solo se modificó README.md
        id: check_files
        run: |
          PR_FILES=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" | \
            jq -r '.[].filename')

          echo "Archivos modificados: $PR_FILES"

          if [[ "$PR_FILES" == "README.md" ]]; then
            echo "only_readme=true" >> $GITHUB_ENV
          else
            echo "only_readme=false" >> $GITHUB_ENV
          fi

      - name: Verificar si el cambio es de solo una línea
        run: |
          ADDITIONS=${{ github.event.pull_request.additions }}
          DELETIONS=${{ github.event.pull_request.deletions }}

          echo "Líneas agregadas: $ADDITIONS, Líneas eliminadas: $DELETIONS"

          if [[ $ADDITIONS -eq 1 && $DELETIONS -eq 0 ]]; then
            echo "one_line_change=true" >> $GITHUB_ENV
          elif [[ $ADDITIONS -eq 2 && $DELETIONS -eq 1 ]]; then
            echo "one_line_change=true" >> $GITHUB_ENV
          else
            echo "one_line_change=false" >> $GITHUB_ENV
          fi

      - name: Fusionar PR automáticamente
        if: env.only_readme == 'true' && env.one_line_change == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const response = await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                merge_method: "squash"
              });

              if (response.status === 200) {
                const username = context.payload.pull_request.user.login;
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: `🎉 ¡Hola @${username}, felicitaciones! ¡Tu PR ha sido fusionado automáticamente! 🚀\n\n✨ ¡No olvides dar ⭐ al repo si te gustó! 😃\n\n![Celebración](https://i.imgur.com/8QUnvXf.png)`
                });
              }
            } catch (error) {
              console.error("Error al fusionar el PR:", error.message);
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: "❌ Hubo un problema al fusionar este PR. Revisa los logs de GitHub Actions."
              });
              core.setFailed(error.message);
            }

      - name: Comentar si no cumple los requisitos
        if: env.only_readme != 'true' || env.one_line_change != 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let message = "⚠️ Este PR no cumple los requisitos para fusión automática.\n\n";
            if (process.env.only_readme !== 'true') {
              message += "🔹 Solo se permite modificar el archivo `README.md`.\n";
            }
            if (process.env.one_line_change !== 'true') {
              message += "🔹 Solo se permite modificar **una sola línea** en el `README.md`.\n";
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
